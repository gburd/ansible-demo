---
# - hosts: all
#   become: true
#   serial: 1
#   pre_tasks:
#     - name: Gather facts from ALL hosts (regardless of limit or tags)
#       tags: always
#       setup:
#       delegate_to: "{{ item }}"
#       delegate_facts: True
#       when: hostvars[item]['gce_private_ip'] is not defined
#       with_items: "{{ groups['all'] }}"
- hosts:
    - tag_kafkas
    - tag_humios
  tags: disk
  become: true
  tasks:
    - name: parition sdb
      parted:
        device: /dev/sdb
        number: 1
        flags: [ lvm ]
        state: present 
    - name: format sdb1
      filesystem:
        dev: /dev/sdb1
        fstype: xfs
    - name: mount sb1
      mount:
        fstype: xfs
        src: /dev/sdb1
        path: /var/humio
        state: mounted

- hosts: tag_zookeepers
  tags: zookeeper
  become: true
  roles:
    - role: humio.java
    - role: AnsibleShipyard.ansible-zookeeper
      zookeeper_version: 3.4.13
      zookeeper_url: "http://archive.apache.org/dist/zookeeper/zookeeper-{{ zookeeper_version }}/zookeeper-{{ zookeeper_version }}.tar.gz"
      zookeeper_hosts: "
        {%- set ips = [] %}
        {%- for host in groups['tag_zookeepers'] %}
        {{- ips.append(dict(id=hostvars[host]['ansible_local']['cluster_index'], host=host, ip=hostvars[host]['gce_private_ip'])) }}
        {%- endfor %}
        {{- ips -}}"
      # zookeeper_hosts: "
      #  {%- set ips = [] %}
      #  {%- for host in groups['zookeepers'] %}
      #  {{- ips.append(dict(id=hostvars[host]['ansible_local']['cluster_index'], host=host, ip=hostvars[host]['ansible_eth1'].ipv4.address)) }}
      #  {%- endfor %}
      #  {{- ips -}}"

- hosts: tag_kafkas
  serial: 1
  become: true
  roles:
    - role: humio.java
    - role: humio.kafka
      zookeeper_hosts: "
        {%- set ips = [] %}
        {%- for host in groups['tag_zookeepers'] %}
        {{- ips.append(dict(id=hostvars[host]['ansible_local']['cluster_index'], host=host, ip=hostvars[host]['gce_private_ip'])) }}
        {%- endfor %}
        {{- ips -}}"
      kafka_broker_id: "{{ ansible_local['cluster_index'] }}"
      kafka_listeners:
        - host: "{{ gce_private_ip }}"

- hosts: tag_humios
  serial: 1
  become: true
  roles:
    - role: humio.java
    - role: humio.server
      tags: humio
      zookeeper_hosts: "
        {%- set ips = [] %}
        {%- for host in groups['tag_zookeepers'] %}
        {{- ips.append(dict(id=hostvars[host]['ansible_local']['cluster_index'], host=host, ip=hostvars[host]['gce_private_ip'])) }}
        {%- endfor %}
        {{- ips -}}"
      kafka_hosts: "
       {%- set ips = [] %}
       {%- for host in groups['tag_kafkas'] %}
       {{- ips.append(dict(id=hostvars[host]['ansible_local']['cluster_index'], host=host, ip=hostvars[host]['gce_private_ip'])) }}
       {%- endfor %}
       {{- ips -}}"
      humio_host_id: "{{ ansible_local['cluster_index'] }}"
      humio_config:
        "0": |
          EXTERNAL_URL=http://{{ gce_private_ip }}:8080

# - hosts: localhost
#   connection: local
#   tasks:
#     - name: Rebalance partitions
#       tags: humio
#       uri:
#         url: "http://{{ hostvars[groups['humios']|random]['ansible_eth0'].ipv4.address }}:8080/api/v1/clusterconfig/partitions/setdefaults"
#         method: POST
#     - debug:
#         msg: "Congratulations. Humio is now available at http://{{ hostvars[groups['humios']|random]['ansible_eth0'].ipv4.address }}:8080"

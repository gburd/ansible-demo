---
- hosts: all
  become: true
  serial: 1
  pre_tasks:
    - name: Gather facts from ALL hosts (regardless of limit or tags)
      tags: always
      setup:
      delegate_to: "{{ item }}"
      delegate_facts: True
      when: hostvars[item]['gce_private_ip'] is not defined
      with_items: "{{ groups['all'] }}"
    - set_fact:
        zookeeper_hosts: "
          {%- set ips = [] %}
          {%- for host in groups['tag_zookeepers'] %}
          {{- ips.append(dict(id=loop.index, host=host, ip=hostvars[host]['gce_private_ip'])) }}
          {%- endfor %}
          {{- ips -}}"
        kafka_hosts: "
          {%- set ips = [] %}
          {%- for host in groups['tag_kafkas'] %}
          {{- ips.append(dict(id=loop.index, host=host, ip=hostvars[host]['gce_private_ip'])) }}
          {%- endfor %}
          {{- ips -}}"
  roles:
  - role: ansible-beats
    tags: monitoring
    beat: "metricbeat"
    beat_conf:
      "metricbeat.modules":
      - "module": "system"
        "metricsets":
          - "cpu"
          - "load"
          - "core"
          - "diskio"
          - "filesystem"
          - "fsstat"
          - "memory"
          - "network"
          - "process"
          - "socket"
        "enabled": true
        "period": "10s"
        "processes": [".*"]
        "cpu_ticks": false
      fields:
        "@tags": ["@host"]
  - role: geerlingguy.firewall
    firewall_state: started
    firewall_enabled_at_boot: true
    firewall_log_dropped_packets: false
    firewall_allowed_tcp_ports:
      - "22"
      - "443"
      - "2181"
      - "2888"
      - "3888"
      - "8080"
      - "8081"
      - "9092"
      - "9200"
    firewall_allowed_udp_ports:
      - "2888"
      - "3888"
    firewall_forwarded_tcp_ports:
      - { src: "8081", dest: "8080" }
- hosts:
    - tag_kafkas
    - tag_humios
  tags: disk
  become: true
  tasks:
    - name: parition sdb
      parted:
        device: /dev/sdb
        number: 1
        flags: [ lvm ]
        label: gpt
        state: present
    - name: format sdb1
      filesystem:
        dev: /dev/sdb1
        fstype: xfs
    - name: mount sb1
      mount:
        fstype: xfs
        src: /dev/sdb1
        path: /var/humio
        state: mounted

- hosts:
    - tag_kafkas
  tags: disk
  become: true
  tasks:
    - name: parition sdc
      parted:
        device: /dev/sdc
        number: 1
        flags: [ lvm ]
        label: gpt
        state: present
    - name: format sdc
      filesystem:
        dev: /dev/sdc1
        fstype: xfs
    - name: mount sdc1
      mount:
        fstype: xfs
        src: /dev/sdc1
        path: /var/kafka
        state: mounted
- hosts:
    - tag_zookeepers
  tags: disk
  become: true
  tasks:
    - name: parition sdd
      parted:
        device: /dev/sdd
        number: 1
        flags: [ lvm ]
        label: gpt
        state: present
    - name: format sdd
      filesystem:
        dev: /dev/sdd1
        fstype: xfs
    - name: mount sdd1
      mount:
        fstype: xfs
        src: /dev/sdd1
        path: /var/lib/zookeeper
        state: mounted

- hosts: tag_zookeepers
  tags: zookeeper
  become: true
  serial: 1
  roles:
    - role: humio.java
    - role: AnsibleShipyard.ansible-zookeeper
      zookeeper_version: 3.4.13
      zookeeper_url: "http://archive.apache.org/dist/zookeeper/zookeeper-{{ zookeeper_version }}/zookeeper-{{ zookeeper_version }}.tar.gz"
      data_dir: /var/lib/zookeeper
      log_dir: /var/log/zookeeper

- hosts: tag_kafkas
  serial: 1
  become: true
  roles:
    - role: humio.java
    - role: humio.kafka
      kafka_broker_id: "{{ ansible_local['cluster_index'] }}"
      kafka_listeners:
        - host: "{{ gce_private_ip }}"
      kafka_log_dirs: "/var/kafka/data"

- hosts: all
  become: true
  serial: 1
  tasks:
    - name: Fetch saml settings
      command: /etc/ansible/fetch-saml-settings.sh
      delegate_to: localhost
      register: result

    - name: Show results
      debug:
        var: result.stdout
      delegate_to: localhost

- hosts: tag_humios
  serial: 1
  become: true
  vars:
     saml_contents: "{{ lookup('file', '/etc/ansible/saml/saml-config.txt') }}"
  roles:
    - role: "ansible-beats"
      beat: "filebeat"
      beat_conf:
        "filebeat":
          "inputs":
            - paths:
              - /var/log/syslog
              - /var/log/auth.log
              fields:
                "@type": syslog-utc
                "@tags": ["@host", "@type"]
            - paths:
              - /var/log/humio/*/humio-debug.log
              fields:
                "@type": humio
                "@tags": ["@host", "@type"]
              multiline:
                pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}'
                negate: true
                match: after
            - paths:
              - /var/log/kafka/server.log
              fields:
                "@type": kafka
                "@tags": ["@host", "@type"]
              multiline:
                pattern: '^\[[0-9]{4}-[0-9]{2}-[0-9]{2}'
                negate: true
                match: after
    - role: humio.java
    - role: humio.server
      tags: humio
      humio_host_id: "{{ ansible_local['cluster_index'] }}"
      humio_config:
        "all": |
          CACHE_STORAGE_DIRECTORY=/var/humio/cache
          CACHE_STORAGE_PERCENTAGE=90
          {% if saml_contents %}{{ saml_contents }}{% endif %}
        "0": |
          EXTERNAL_URL=http://{{ gce_private_ip }}:8080
- hosts:
    - tag_humios
  tags: disk
  become: true
  tasks:
    - name: Check if drives are already mounted
      shell: df | grep "nvme0n1" | wc -l
      register: nvme_checked
    - name: parition nvme0n1
      when: nvme_checked.stdout == 0
      parted:
        device: /dev/nvme0n1
        number: 1
        flags: [ lvm ]
        label: gpt
        state: present
    - name: format nvme0n1
      when: nvme_checked.stdout == 0
      filesystem:
        dev: /dev/nvme0n1
        fstype: xfs
    - name: Cache ownership
      file:
        path: /var/humio/cache
        state: directory
        owner: humio
        group: humio
        mode: '0755'
    - name: mount nvme0n1
      when: nvme_checked.stdout == 0
      mount:
        fstype: xfs
        src: /dev/nvme0n1
        path: /var/humio/cache
        state: mounted
# - hosts: localhost
#   connection: local
#   tasks:
#     - name: Rebalance partitions
#       tags: humio
#       uri:
#         url: "http://{{ hostvars[groups['humios']|random]['ansible_eth0'].ipv4.address }}:8080/api/v1/clusterconfig/partitions/setdefaults"
#         method: POST
#     - debug:
#         msg: "Congratulations. Humio is now available at http://{{ hostvars[groups['humios']|random]['ansible_eth0'].ipv4.address }}:8080"

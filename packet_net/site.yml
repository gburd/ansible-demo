---
- hosts: tag_zookeepers
  become: true
  vars:
    zookeeper_url: http://dk.mirrors.quenda.co/apache/zookeeper/zookeeper-3.4.12/zookeeper-3.4.12.tar.gz
  roles:
    - role: humio.java
    - role: AnsibleShipyard.ansible-zookeeper
      zookeeper_hosts: "
       {%- set ips = [] %}
       {%- for host in groups['tag_zookeepers'] %}
       {{- ips.append(dict(id=hostvars[host]['ansible_local']['cluster_index'], host=host, ip=hostvars[host]['ansible_bond0_0'].ipv4.address)) }}
       {%- endfor %}
       {{- ips -}}"

- hosts: tag_kafkas
  serial: 1
  become: true
  roles:
    - role: humio.java
    - role: humio.kafka
      zookeeper_hosts: "
       {%- set ips = [] %}
       {%- for host in groups['tag_zookeepers'] %}
       {{- ips.append(dict(id=hostvars[host]['ansible_local']['cluster_index'], host=host, ip=hostvars[host]['ansible_bond0_0'].ipv4.address)) }}
       {%- endfor %}
       {{- ips -}}"
      kafka_listeners:
        - host: "{{ ansible_bond0_0.ipv4.address }}"

- hosts: tag_humios
  serial: 1
  become: true
  roles:
    - role: humio.java
    - role: humio.server
      zookeeper_hosts: "
       {%- set ips = [] %}
       {%- for host in groups['tag_zookeepers'] %}
       {{- ips.append(dict(id=hostvars[host]['ansible_local']['cluster_index'], host=host, ip=hostvars[host]['ansible_bond0_0'].ipv4.address)) }}
       {%- endfor %}
       {{- ips -}}"
      kafka_hosts: "
       {%- set ips = [] %}
       {%- for host in groups['tag_kafkas'] %}
       {{- ips.append(dict(id=hostvars[host]['ansible_local']['cluster_index'], host=host, ip=hostvars[host]['ansible_bond0_0'].ipv4.address)) }}
       {%- endfor %}
       {{- ips -}}"
      humio_host_id: "{{ ansible_local['cluster_index'] }}"
      humio_config:
##        all: "FILE=humio_config"
        "0": "EXTERNAL_URL=http://{{ ansible_bond0_0.ipv4.address }}:8080"

- hosts: localhost
  connection: local
  tasks:
    - name: Rebalance partitions
      uri:
        url: http://{{ hostvars[groups['tag_humios']|random]['ansible_bond0'].ipv4.address }}:8080/api/v1/clusterconfig/partitions/setdefaults
        method: POST
    - name: Create repository
      uri:
        url: "http://{{ hostvars[groups['tag_humios']|random]['ansible_bond0'].ipv4.address }}:8080/graphql"
        method: POST
        body_format: json
        body: |
          {
            "query":"mutation {createRepository(name: \"dataspace0\") {__typename}}"
          }

- hosts: tag_ingesters
  roles:
    - role: ingester
      vars:
        ingest_baseurls: "http://{{ hostvars[groups['tag_humios']|random]['ansible_bond0'].ipv4.address }}:8080"
        ingest_tens_gb_per_day: 10
        ingest_users: 1